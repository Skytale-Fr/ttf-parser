//https://github.com/jfrog/project-examples/blob/master/gradle-examples/gradle-example-minimal/build.gradle#L53

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.+')
    }
}

plugins {
    id 'com.github.johnrengelman.shadow'
    id "java"
    id 'maven-publish'
}

group = 'fr.skytale'
version = '1.1.0'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)  // auto install

compileJava {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

allprojects {
    repositories {
        mavenCentral()
        maven { url 'https://repository.lasers-enigma.eu:443/r' }
    }
}

repositories {
    mavenLocal()
    maven { url 'https://jitpack.io' }
    maven {
        url "https://hub.spigotmc.org/nexus/content/repositories/snapshots"
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url 'https://oss.sonatype.org/content/groups/public/' }

    maven { url "https://maven.enginehub.org/repo/" }
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

sourceSets.main.resources {
    srcDirs "src/main/resources"
}

/**
 * Ignore an error during compilation due to version 7.0 of Gradle (version that supports Java 16).
 */
tasks.named("processResources") {
    duplicatesStrategy = DuplicatesStrategy.WARN
}

// Rename generated jar
shadowJar {
    archiveBaseName.set("${rootProject.name}")
    archiveClassifier.set('')
}

task sourcesJar(type: Jar) {
    duplicatesStrategy = 'include'
    classifier = 'sources'
    from sourceSets.main.allSource
}

java {
    withSourcesJar()
    withJavadocJar()
}

if (project.hasProperty('artifactory_user')) {
    publishing {
        publications {
            shadow(MavenPublication) { publication ->
                project.shadow.component(publication)
                artifacts = [shadowJar, javadocJar, sourcesJar]
                pom {
                    name.set("TTFParser")
                    description.set("Minecraft font ttfParser library")
                    url.set("https://gitlab.com/skytale_/skytale-mc/libraries/resourcepacklib")
                    licenses {
                        license {
                            name.set("GNU GENERAL PUBLIC LICENSE, Version 3")
                            url.set("https://www.gnu.org/licenses/gpl-3.0.html")
                        }
                    }
                    developers {
                        developer {
                            id.set("GrenadineDDL")
                            name.set("GrenadineDDL")
                            email.set("GrenadineDDL@GrenadineDDL.grenadineDDL")
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                name = "Skytale"
                url = "https://repository.skytale.fr/artifactory/private"
                credentials {
                    username = "${artifactory_user}"
                    password = "${artifactory_password}"
                }
            }
        }
    }
}